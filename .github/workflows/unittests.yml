name: unit-tests
on: [push]

env:
  spadesVer: 3.14.1
  KRAKEN_DEFAULT_DB: /kraken-database
# perl: [ '5.32', '5.30', '5.28' ]
# perl: [ '5.32', '5.30.1', '5.16.3', '5.12.3' ]
# os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
# https://github.com/marketplace/actions/setup-perl-environment

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ['ubuntu-18.04' ]
        perl: [ '5.32' ]
    name: Perl ${{ matrix.perl }} on ${{ matrix.os }}
    steps:
      - name: add some paths to PATH
        run:  |
          echo "$GITHUB_WORKSPACE/CG-Pipeline/scripts" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/shovill/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/.local/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/krona" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/SPAdes-${spadesVer}-Linux/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/kmc" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/Lighter-1.1.1" >> $GITHUB_PATH
          echo
          cat $GITHUB_PATH
      - name: Set up perl
        uses: shogo82148/actions-setup-perl@v1
        with:
          perl-version: ${{ matrix.perl }}
          multi-thread: "true"
      - name: checkout my repo
        uses: actions/checkout@v2
        with:
          path: SneakerNet
      - name: checkout CG-Pipeline
        uses: actions/checkout@v2
        with:
          repository: lskatz/CG-Pipeline
          path: CG-Pipeline
          ref:  v0.5
      - name: checkout Shovill
        uses: actions/checkout@v2
        with:
          repository: tseemann/shovill
          path: shovill
          ref:  v1.1.0
      - name: install krona
        run:  |
          cd $GITHUB_WORKSPACE
          wget https://github.com/marbl/Krona/releases/download/v2.7.1/KronaTools-2.7.1.tar
          tar xvf KronaTools-2.7.1.tar
          cd KronaTools-2.7.1
          ./install.pl --prefix /opt/krona
          ./updateTaxonomy.sh
          export PATH=$PATH:/opt/krona/bin
          echo "/opt/krona/bin" >> $GITHUB_PATH
          which ktImportText
      - name: install samclip
        run:  |
          mkdir $GITHUB_WORKSPACE/samclip
          cd $GITHUB_WORKSPACE/samclip
          wget https://raw.githubusercontent.com/tseemann/samclip/master/samclip
          chmod +x samclip
          export PATH=$PATH:$GITHUB_WORKSPACE/samclip
          echo "$GITHUB_WORKSPACE/samclip" >> $GITHUB_PATH
          which samclip
      - name: install FLASh
        run:  |
          cd $GITHUB_WORKSPACE
          wget https://sourceforge.net/projects/flashpage/files/FLASH-1.2.11.tar.gz
          tar -zxf FLASH-1.2.11.tar.gz
          rm -rf FLASH-1.2.11.tar.gz
          cd FLASH-1.2.11
          make
          export PATH=$PATH:$GITHUB_WORKSPACE/FLASH-1.2.11
          echo "$GITHUB_WORKSPACE/FLASH-1.2.11" >> $GITHUB_PATH
          ls -RlhS "$GITHUB_WORKSPACE/FLASH-1.2.11"
          which flash
      - name: install Mash
        run:  |
          cd $GITHUB_WORKSPACE
          wget https://github.com/marbl/Mash/releases/download/v2.2/mash-Linux64-v2.2.tar
          tar -xvf mash-Linux64-v2.2.tar # creates mash-Linux64-v2.2/mash
          export PATH=$PATH:$GITHUB_WORKSPACE/mash-Linux64-v2.2
          echo "$GITHUB_WORKSPACE/mash-Linux64-v2.2" >> $GITHUB_PATH
          which mash
      - name: checkout seqtk
        run:  |
          mkdir -v $GITHUB_WORKSPACE/seqtk-src
          cd $GITHUB_WORKSPACE/seqtk-src
          wget https://github.com/lh3/seqtk/archive/v1.3.tar.gz
          tar -zxf v1.3.tar.gz 
          rm -v v1.3.tar.gz 
          cd seqtk-1.3/
          make
          sudo make install
          which seqtk
      - name: install kmc
        run:  |
          mkdir -v $GITHUB_WORKSPACE/kmc
          cd $GITHUB_WORKSPACE/kmc
          wget https://github.com/refresh-bio/KMC/releases/download/v3.1.1/KMC3.1.1.linux.tar.gz
          tar -xvzf KMC3.1.1.linux.tar.gz || echo "WARNING: could not find KMC3.1.1.linux.tar.gz"
          rm -vf KMC3.1.1.linux.tar.gz
          sudo ln -sv $GITHUB_WORKSPACE/kmc/kmc* /usr/local/bin
          which kmc
          kmc --help || true
      - name: install lighter
        run:  |
          cd $GITHUB_WORKSPACE
          wget https://github.com/mourisl/Lighter/archive/v1.1.1.tar.gz
          tar -zvxf v1.1.1.tar.gz
          cd Lighter-1.1.1
          make
          chmod -v +x lighter
          export PATH=$PATH:$GITHUB_WORKSPACE/lighter-1.1.1
          echo "$GITHUB_WORKSPACE/lighter-1.1.1" >> $GITHUB_PATH
          which lighter
      - name: install megahit
        run:  |
          mkdir "$GITHUB_WORKSPACE/megahit"
          cd "$GITHUB_WORKSPACE/megahit"
          wget https://github.com/voutcn/megahit/releases/download/v1.1.4/megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz
          tar -xzf megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin.tar.gz
          ls -lhSR "$GITHUB_WORKSPACE/megahit"
          export PATH="$PATH:$GITHUB_WORKSPACE/megahit/megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin"
          echo "$GITHUB_WORKSPACE/megahit/megahit_v1.1.4_LINUX_CPUONLY_x86_64-bin" >> $GITHUB_PATH
          which megahit
      - name: install pilon
        run:  |
          mkdir -v $GITHUB_WORKSPACE/pilon
          cd $GITHUB_WORKSPACE/pilon
          wget https://github.com/broadinstitute/pilon/releases/download/v1.22/pilon-1.22.jar
          chmod +x pilon-1.22.jar
          echo "#!/bin/bash" > pilon
          echo "exec java -jar /pilon/pilon-1.22.jar """"$""@"""" " >> pilon
          chmod +x pilon
          export PATH=$PATH:$GITHUB_WORKSPACE/pilon
          echo "$GITHUB_WORKSPACE/pilon" >> $GITHUB_PATH
          which pilon
      - name: install trimmomatic
        run:  |
          cd $GITHUB_WORKSPACE
          wget http://www.usadellab.org/cms/uploads/supplementary/Trimmomatic/Trimmomatic-0.38.zip 
          unzip Trimmomatic-0.38.zip 
          rm -rf Trimmomatic-0.38.zip 
          cd Trimmomatic-0.38
          chmod +x trimmomatic-0.38.jar
          echo "#!/bin/bash" >> trimmomatic
          echo "exec java -jar $GITHUB_WORKSPACE/Trimmomatic-0.38/trimmomatic-0.38.jar """"$""@"""" " >> trimmomatic
          chmod -v +x trimmomatic
          export PATH="$PATH:$GITHUB_WORKSPACE/Trimmomatic-0.38"
          echo "$GITHUB_WORKSPACE/Trimmomatic-0.38" >> $GITHUB_PATH
          which trimmomatic       
      - name: apt-get install
        run:  |
          sudo apt-get update
          sudo apt-get -y install libgd-dev ca-certificates
          sudo apt-get -y install tree libberkeleydb-perl libdb-dev bioperl perl cpanminus curl 
          sudo apt-get -y install build-essential bioperl-run ncbi-blast+ prodigal sendmail python3 python3-pip
          # shovill things
          sudo apt-get -y install bwa velvet wget pigz libncurses5-dev libbz2-dev liblzma-dev libfindbin-libs-perl trimmomatic
      - name: update alternatives for python3
        run:  |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          sudo update-alternatives --set python /usr/bin/python3
          python --version
          pip3 --version
      - name: install jellyfish1
        run:  |
          cd $GITHUB_WORKSPACE
          wget https://github.com/gmarcais/Jellyfish/releases/download/v1.1.12/jellyfish-1.1.12.tar.gz
          tar -zxf jellyfish-1.1.12.tar.gz
          cd jellyfish-1.1.12
          ./configure --prefix=/opt/jellyfish-1.1.12
          make -j 2
          sudo make install
          export PATH=$PATH:/opt/jellyfish-1.1.12/bin
          echo "/opt/jellyfish-1.1.12/bin" >> $GITHUB_PATH
          which jellyfish
      - name: install kraken1
        run:  |
          cd $GITHUB_WORKSPACE
          wget https://github.com/DerrickWood/kraken/archive/v1.1.1.tar.gz -O kraken-v1.1.1.tar.gz
          tar -xvzf kraken-v1.1.1.tar.gz
          cd kraken-1.1.1
          mkdir /opt/kraken
          ./install_kraken.sh /opt/kraken/
          export PATH=$PATH:/opt/kraken
          echo "/opt/kraken/" >> $GITHUB_PATH
          which kraken
      - name: install minikraken
        run: |
          sudo mkdir -v /kraken-database
          cd /kraken-database
          sudo wget https://ccb.jhu.edu/software/kraken/dl/minikraken_20171019_4GB.tgz
          sudo wget --no-check-certificate https://ccb.jhu.edu/software/kraken/dl/minikraken_20171019_4GB.tgz
          sudo tar -zxf minikraken_20171019_4GB.tgz 
          sudo mv -nv minikraken_20171013_4GB/* . # flatten db dir
          sudo ls -lhSR /kraken-database
      - name: install SPAdes
        run:  |
          wget https://github.com/ablab/spades/releases/download/v${spadesVer}/SPAdes-${spadesVer}-Linux.tar.gz
          tar -xzf SPAdes-${spadesVer}-Linux.tar.gz
      - name: install skesa
        run:  |
          mkdir $GITHUB_WORKSPACE/skesa
          cd $GITHUB_WORKSPACE/skesa 
          wget https://github.com/ncbi/SKESA/releases/download/2.4.0/skesa.centos.7.7
          wget https://github.com/ncbi/SKESA/releases/download/2.4.0/gfa_connector.centos7.7
          wget https://github.com/ncbi/SKESA/releases/download/2.4.0/kmercounter.centos7.7
          mv -v skesa.centos.7.7 skesa
          mv -v gfa_connector.centos7.7 gfa_connector 
          mv -v kmercounter.centos7.7 kmercounter
          chmod -v +x skesa gfa_connector kmercounter
          tree $GITHUB_WORKSPACE/skesa
          export PATH=$PATH:$GITHUB_WORKSPACE/skesa
          echo "$GITHUB_WORKSPACE/skesa" >> $GITHUB_PATH
          which skesa
          which gfa_connector
          which kmercounter
      - name: configure cpanm
        run:  |
          cpanm --local-lib=$HOME/perl5 local::lib
          perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
      - name: Dumper INC
        run:  perl -MData::Dumper -e 'print Dumper \@INC'
      - name: tree pwd
        run:  tree $(pwd)
      - name: tree home
        run:  tree $HOME
      - name: tree GITHUB_WORKSPACE
        run:  tree $GITHUB_WORKSPACE
      - name: tree -L 3 -d GITHUB_WORKSPACE
        run:  tree -L 3 -d $GITHUB_WORKSPACE
      - run: perl -V
      - name: env
        run:  env
      - name: env with perl local lib
        run:  |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          env
      - name: install-makemaker
        run: |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          #perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib | perl -plane 's/export .*//' >> $GITHUB_ENV
          echo "PERL5LIB=$PERL5LIB" >> $GITHUB_ENV
          echo "PERL_MB_OPT=$PERL_MB_OPT" >> $GITHUB_ENV
          echo "PERL_MM_OPT=$PERL_MM_OPT" >> $GITHUB_ENV
          echo 
          echo GITHUG_ENV
          cat $GITHUB_ENV
          echo
          cd SneakerNet
          cpanm -l $HOME/perl5 --verbose --notest --force ExtUtils::MakeMaker
          cpanm -l $HOME/perl5 --installdeps . --verbose --notest --force
      - name: perl-check-dependencies
        run:  |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          cd $GITHUB_WORKSPACE/SneakerNet
          perl Makefile.PL
          make
          cpanm --installdeps . -l $HOME/perl5 --verbose --notest --force
          perl -MData::Dumper -MStatistics::Descriptive -MConfig::Simple -MFile::Slurp -MBio::Kmer -MBio::SeqIO -MText::Fuzzy -MEmail::Stuffer -MBio::FeatureIO -MMoo -MList::MoreUtils -MJSON -e 'print Dumper \%INC'
          make
          echo "DEBUG: PERL5LIB: $PERL5LIB"
      - name: check-SneakerNet-repo
        run: |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          cd $GITHUB_WORKSPACE/SneakerNet
          cat MYMETA.json
          echo;env;echo
          ls -lhS t/M00123-18-001-test/
          md5sum t/M00123-18-001-test/*.fastq.gz
          for i in t/M00123-18-001-test/*.fastq.gz; do echo -ne "$i\t"; zcat $i | tail -n 1; done;
          echo
          echo "PATH broken up:"
          echo "$PATH" | tr ":" "\n"
          echo
          echo "GITHUB_ENV: $GITHUB_ENV"
          cat $GITHUB_ENV
          echo "GITHUB_PATH: $GITHUB_PATH"
          cat $GITHUB_PATH
          echo "Which flash:"
          which flash
          echo
          echo "Running t/00_env.t ..."
          perl t/00_env.t
          for i in t/M00123-18-001-test/*.fastq.gz; do echo -ne "$i\t"; zcat $i | tail -n 1; done;
      - id:   prove-lv-t
        name: prove-lv-t
        run:  |
          eval $(perl -I $HOME/perl5/lib/perl5/ -Mlocal::lib)
          mkdir -v $GITHUB_WORKSPACE/tmp
          export TMPDIR=$GITHUB_WORKSPACE/tmp
          cd $GITHUB_WORKSPACE/SneakerNet
          sed -i 's+/opt/kraken/full-20140723+/kraken-database+g' config/settings.conf
          #prove -lv t
          make
          make test


